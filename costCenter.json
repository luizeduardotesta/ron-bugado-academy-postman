{
	"info": {
		"_postman_id": "254fee40-2475-46f2-8fed-1e198beb4f6f",
		"name": "05.CostCenter",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json",
		"_exporter_id": "26876722"
	},
	"item": [
		{
			"name": "Happy ending",
			"item": [
				{
					"name": "Register CostCenter",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"function costCenterName(){",
									"",
									"var costCenterName = [",
									"  \"Operações\", \"Financeira\", \"Tecnologia\", \"Recursos Humanos\", \"Marketing\",",
									"  \"Vendas\", \"Desenvolvimento\", \"Logística\", \"Jurídica\", \"Executiva\", \"Administrativa\",",
									"  \"Qualidade\", \"Sustentabilidade\", \"Comunicação\", \"Projetos\", \"Inovação\", \"Administração\",",
									"  \"Design\", \"Produção\", \"Educação\", \"Pesquisa e Desenvolvimento\", \"Suporte ao Cliente\",",
									"  \"Manufatura\", \"Engenharia\", \"Eventos\", \"Serviços ao Consumidor\", \"Mídias Sociais\",",
									"  \"Analytics\", \"Auditoria\", \"Compras\", \"Segurança da Informação\", \"Saúde e Bem-Estar\",",
									"  \"Arquitetura\", \"Transporte\", \"Consultoria\", \"Parcerias\", \"Governança\", \"Cultura Organizacional\",",
									"  \"Desempenho\", \"Internacional\", \"Diversidade e Inclusão\", \"Alianças Estratégicas\",",
									"  \"Planejamento\", \"Treinamento\", \"Responsabilidade Social\", \"Assuntos Regulatórios\",",
									"  \"Propriedade Intelectual\", \"Assuntos Públicos\", \"Pesquisa de Mercado\", \"Planejamento Financeiro\"",
									"];",
									"",
									"var randomItem = costCenterName[Math.floor(Math.random() * costCenterName.length)];",
									"",
									"return randomItem;",
									"}",
									"",
									"pm.environment.set(\"costCenterName\", costCenterName());"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 201', function () {",
									"    pm.response.to.have.status(201);",
									"})",
									"",
									"pm.test('Verify costCentername', function () {",
									"    pm.expect(pm.environment.get('costCenterName')).to.eql(pm.response.json().newCostCenter.costCenterName);",
									"})",
									"",
									"pm.test('Verify costCenterCode', function () {",
									"let lastCostCenterNumber = parseInt(pm.environment.get(\"lastCostCenterNumber\")) || 0;",
									"let costCenterNumber = parseInt(pm.response.json().newCostCenter.costCenterCode.split('.')[1]);",
									"",
									"    if (costCenterNumber > lastCostCenterNumber) {",
									"        pm.environment.set('lastCostCenterNumber', costCenterNumber);",
									"",
									"        pm.expect(costCenterNumber).to.eql(lastCostCenterNumber + 1);",
									"    }",
									"});",
									"",
									"pm.environment.set('IdcostCenter', pm.response.json().newCostCenter._id)"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": {
								"value": "{{Token}}",
								"key": "token",
								"in": "query"
							}
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"costCenterName\": \"{{costCenterName}}\",\n  \"boardId\": \"{{IdBoard}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseUrl}}/api/costCenter"
					},
					"response": []
				},
				{
					"name": "Register CostCenter 50 characters",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"function costCenterName(){",
									"",
									"var costCenterName = [",
									"  \"Operações\", \"Financeira\", \"Tecnologia\", \"Recursos Humanos\", \"Marketing\",",
									"  \"Vendas\", \"Desenvolvimento\", \"Logística\", \"Jurídica\", \"Executiva\", \"Administrativa\",",
									"  \"Qualidade\", \"Sustentabilidade\", \"Comunicação\", \"Projetos\", \"Inovação\", \"Administração\",",
									"  \"Design\", \"Produção\", \"Educação\", \"Pesquisa e Desenvolvimento\", \"Suporte ao Cliente\",",
									"  \"Manufatura\", \"Engenharia\", \"Eventos\", \"Serviços ao Consumidor\", \"Mídias Sociais\",",
									"  \"Analytics\", \"Auditoria\", \"Compras\", \"Segurança da Informação\", \"Saúde e Bem-Estar\",",
									"  \"Arquitetura\", \"Transporte\", \"Consultoria\", \"Parcerias\", \"Governança\", \"Cultura Organizacional\",",
									"  \"Desempenho\", \"Internacional\", \"Diversidade e Inclusão\", \"Alianças Estratégicas\",",
									"  \"Planejamento\", \"Treinamento\", \"Responsabilidade Social\", \"Assuntos Regulatórios\",",
									"  \"Propriedade Intelectual\", \"Assuntos Públicos\", \"Pesquisa de Mercado\", \"Planejamento Financeiro\"",
									"];",
									"",
									"var randomItem = costCenterName[Math.floor(Math.random() * costCenterName.length)];",
									"",
									"return randomItem;",
									"}",
									"",
									"pm.environment.set(\"costCenterName\", costCenterName());"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 201', function () {",
									"    pm.response.to.have.status(201);",
									"})",
									"",
									"pm.test('Verify costCentername', function () {",
									"    pm.expect(pm.environment.get('costCenterName')).to.eql(pm.response.json().newCostCenter.costCenterName);",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": {
								"value": "{{Token}}",
								"key": "token",
								"in": "query"
							}
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"costCenterName\": \"{{50CharactersName}}\",\n  \"boardId\": \"{{IdBoard}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseUrl}}/api/costCenter"
					},
					"response": []
				},
				{
					"name": "List all CostCenters",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 200', function () {",
									"    pm.response.to.have.status(200);",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": {
								"value": "{{Token}}",
								"key": "token",
								"in": "query"
							}
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseUrl}}/api/costCenter"
					},
					"response": []
				},
				{
					"name": "Count all CostCenters",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 200', function () {",
									"    pm.response.to.have.status(200);",
									"})",
									"",
									"pm.test(\"Count all registered costCenters\", function(){",
									"var responseData = pm.response.json();",
									"",
									"    pm.expect(responseData).to.have.property(\"count\");",
									"",
									"    pm.expect(responseData.count).to.be.a('number');",
									"    pm.expect(responseData.count).to.satisfy((count) => count > 0);",
									"    pm.expect(responseData.count % 1).to.eql(0);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": {
								"value": "{{Token}}",
								"key": "token",
								"in": "query"
							}
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseUrl}}/api/costCenter/count"
					},
					"response": []
				},
				{
					"name": "List CostCenters by ID",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function(){",
									"    pm.response.to.have.status(200)",
									"});",
									"",
									"pm.test(\"Check the costCenter ID\", function(){",
									"    pm.expect(pm.environment.get(\"IdcostCenter\")).to.eql(JSON.parse(responseBody).costCenter._id)",
									"});",
									"",
									"pm.test(\"Check the costCenterName\", function(){",
									"    pm.expect(pm.environment.get(\"costCenterName\")).to.eql(JSON.parse(responseBody).costCenter.costCenterName)",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": {
								"value": "{{Token}}",
								"key": "token",
								"in": "query"
							}
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseUrl}}/api/costCenter/{{IdcostCenter}}"
					},
					"response": []
				},
				{
					"name": "Edit CostCenter by ID",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"function costCenterName(){",
									"",
									"var costCenterName = [",
									"  \"Operações\", \"Financeira\", \"Tecnologia\", \"Recursos Humanos\", \"Marketing\",",
									"  \"Vendas\", \"Desenvolvimento\", \"Logística\", \"Jurídica\", \"Executiva\", \"Administrativa\",",
									"  \"Qualidade\", \"Sustentabilidade\", \"Comunicação\", \"Projetos\", \"Inovação\", \"Administração\",",
									"  \"Design\", \"Produção\", \"Educação\", \"Pesquisa e Desenvolvimento\", \"Suporte ao Cliente\",",
									"  \"Manufatura\", \"Engenharia\", \"Eventos\", \"Serviços ao Consumidor\", \"Mídias Sociais\",",
									"  \"Analytics\", \"Auditoria\", \"Compras\", \"Segurança da Informação\", \"Saúde e Bem-Estar\",",
									"  \"Arquitetura\", \"Transporte\", \"Consultoria\", \"Parcerias\", \"Governança\", \"Cultura Organizacional\",",
									"  \"Desempenho\", \"Internacional\", \"Diversidade e Inclusão\", \"Alianças Estratégicas\",",
									"  \"Planejamento\", \"Treinamento\", \"Responsabilidade Social\", \"Assuntos Regulatórios\",",
									"  \"Propriedade Intelectual\", \"Assuntos Públicos\", \"Pesquisa de Mercado\", \"Planejamento Financeiro\"",
									"];",
									"",
									"var randomItem = costCenterName[Math.floor(Math.random() * costCenterName.length)];",
									"",
									"return randomItem;",
									"}",
									"",
									"pm.environment.set(\"costCenterName\", costCenterName());"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 200', function () {",
									"    pm.response.to.have.status(200);",
									"})",
									"",
									"pm.test('Verify costCentername', function () {",
									"    pm.expect(pm.environment.get('costCenterName')).to.eql(pm.response.json().updatedCostCenter.costCenterName);",
									"})",
									"",
									"pm.test(\"Check the costCenter ID\", function(){",
									"    pm.expect(pm.environment.get(\"IdcostCenter\")).to.eql(JSON.parse(responseBody).updatedCostCenter._id)",
									"});",
									"",
									"pm.test(\"Verify editBoardName Message\", function(){",
									"    pm.expect(pm.globals.get(\"MSGSuccessEdit\")).to.eql(JSON.parse(responseBody).msg)",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": {
								"value": "{{Token}}",
								"key": "token",
								"in": "query"
							}
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"costCenterName\": \"{{costCenterName}}\",\n  \"boardId\": \"{{IdBoard}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseUrl}}/api/costCenter/{{IdcostCenter}}"
					},
					"response": []
				},
				{
					"name": "Edit CostCenter Status",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 202', function () {",
									"    pm.response.to.have.status(202);",
									"})",
									"",
									"pm.test('Verify costCenter status', function () {",
									"    pm.expect(pm.globals.get('costCenterStatus')).to.eql(pm.response.json().msg);",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": {
								"value": "{{Token}}",
								"key": "token",
								"in": "query"
							}
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"status\": false\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseUrl}}/api/costCenter/status/{{IdcostCenter}}"
					},
					"response": []
				}
			]
		},
		{
			"name": "Unhappy ending",
			"item": [
				{
					"name": "Register Cost Center",
					"item": [
						{
							"name": "Register CostCenter whit no info",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"function costCenterName(){",
											"",
											"var costCenterName = [",
											"  \"Operações\", \"Financeira\", \"Tecnologia\", \"Recursos Humanos\", \"Marketing\",",
											"  \"Vendas\", \"Desenvolvimento\", \"Logística\", \"Jurídica\", \"Executiva\", \"Administrativa\",",
											"  \"Qualidade\", \"Sustentabilidade\", \"Comunicação\", \"Projetos\", \"Inovação\", \"Administração\",",
											"  \"Design\", \"Produção\", \"Educação\", \"Pesquisa e Desenvolvimento\", \"Suporte ao Cliente\",",
											"  \"Manufatura\", \"Engenharia\", \"Eventos\", \"Serviços ao Consumidor\", \"Mídias Sociais\",",
											"  \"Analytics\", \"Auditoria\", \"Compras\", \"Segurança da Informação\", \"Saúde e Bem-Estar\",",
											"  \"Arquitetura\", \"Transporte\", \"Consultoria\", \"Parcerias\", \"Governança\", \"Cultura Organizacional\",",
											"  \"Desempenho\", \"Internacional\", \"Diversidade e Inclusão\", \"Alianças Estratégicas\",",
											"  \"Planejamento\", \"Treinamento\", \"Responsabilidade Social\", \"Assuntos Regulatórios\",",
											"  \"Propriedade Intelectual\", \"Assuntos Públicos\", \"Pesquisa de Mercado\", \"Planejamento Financeiro\"",
											"];",
											"",
											"var randomItem = costCenterName[Math.floor(Math.random() * costCenterName.length)];",
											"",
											"return randomItem;",
											"}",
											"",
											"pm.environment.set(\"costCenterName\", costCenterName());"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function(){",
											"    pm.response.to.have.status(400)",
											"});",
											"",
											"pm.test(\"Verify costCenterName Message\", function(){",
											"    pm.expect(pm.globals.get(\"MSGCostCenterIsRequired\")).to.eql(JSON.parse(responseBody).error[0])",
											"});",
											"",
											"pm.test(\"Verify boardId Message\", function(){",
											"    pm.expect(pm.globals.get(\"MSGBoardIDIsRequired\")).to.eql(JSON.parse(responseBody).error[1])",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": {
										"value": "{{Token}}",
										"key": "token",
										"in": "query"
									}
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"costCenterName\": \"\",\n  \"boardId\": \"\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/api/costCenter"
							},
							"response": []
						},
						{
							"name": "Register CostCenter permited characters",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"function costCenterName(){",
											"",
											"var costCenterName = [",
											"  \"Operações\", \"Financeira\", \"Tecnologia\", \"Recursos Humanos\", \"Marketing\",",
											"  \"Vendas\", \"Desenvolvimento\", \"Logística\", \"Jurídica\", \"Executiva\", \"Administrativa\",",
											"  \"Qualidade\", \"Sustentabilidade\", \"Comunicação\", \"Projetos\", \"Inovação\", \"Administração\",",
											"  \"Design\", \"Produção\", \"Educação\", \"Pesquisa e Desenvolvimento\", \"Suporte ao Cliente\",",
											"  \"Manufatura\", \"Engenharia\", \"Eventos\", \"Serviços ao Consumidor\", \"Mídias Sociais\",",
											"  \"Analytics\", \"Auditoria\", \"Compras\", \"Segurança da Informação\", \"Saúde e Bem-Estar\",",
											"  \"Arquitetura\", \"Transporte\", \"Consultoria\", \"Parcerias\", \"Governança\", \"Cultura Organizacional\",",
											"  \"Desempenho\", \"Internacional\", \"Diversidade e Inclusão\", \"Alianças Estratégicas\",",
											"  \"Planejamento\", \"Treinamento\", \"Responsabilidade Social\", \"Assuntos Regulatórios\",",
											"  \"Propriedade Intelectual\", \"Assuntos Públicos\", \"Pesquisa de Mercado\", \"Planejamento Financeiro\"",
											"];",
											"",
											"var randomItem = costCenterName[Math.floor(Math.random() * costCenterName.length)];",
											"",
											"return randomItem;",
											"}",
											"",
											"pm.environment.set(\"costCenterName\", costCenterName());"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function(){",
											"    pm.response.to.have.status(400)",
											"});",
											"",
											"pm.test(\"Verify costCenterName Message\", function(){",
											"    pm.expect(pm.globals.get(\"MsgCostCenterNamePermitedCharacters\")).to.eql(JSON.parse(responseBody).error[0])",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": {
										"value": "{{Token}}",
										"key": "token",
										"in": "query"
									}
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"costCenterName\": \"{{}}\",\n  \"boardId\": \"{{}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/api/costCenter"
							},
							"response": []
						},
						{
							"name": "Register CostCenter max characters",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"function costCenterName(){",
											"",
											"var costCenterName = [",
											"  \"Operações\", \"Financeira\", \"Tecnologia\", \"Recursos Humanos\", \"Marketing\",",
											"  \"Vendas\", \"Desenvolvimento\", \"Logística\", \"Jurídica\", \"Executiva\", \"Administrativa\",",
											"  \"Qualidade\", \"Sustentabilidade\", \"Comunicação\", \"Projetos\", \"Inovação\", \"Administração\",",
											"  \"Design\", \"Produção\", \"Educação\", \"Pesquisa e Desenvolvimento\", \"Suporte ao Cliente\",",
											"  \"Manufatura\", \"Engenharia\", \"Eventos\", \"Serviços ao Consumidor\", \"Mídias Sociais\",",
											"  \"Analytics\", \"Auditoria\", \"Compras\", \"Segurança da Informação\", \"Saúde e Bem-Estar\",",
											"  \"Arquitetura\", \"Transporte\", \"Consultoria\", \"Parcerias\", \"Governança\", \"Cultura Organizacional\",",
											"  \"Desempenho\", \"Internacional\", \"Diversidade e Inclusão\", \"Alianças Estratégicas\",",
											"  \"Planejamento\", \"Treinamento\", \"Responsabilidade Social\", \"Assuntos Regulatórios\",",
											"  \"Propriedade Intelectual\", \"Assuntos Públicos\", \"Pesquisa de Mercado\", \"Planejamento Financeiro\"",
											"];",
											"",
											"var randomItem = costCenterName[Math.floor(Math.random() * costCenterName.length)];",
											"",
											"return randomItem;",
											"}",
											"",
											"pm.environment.set(\"costCenterName\", costCenterName());"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function(){",
											"    pm.response.to.have.status(400)",
											"});",
											"",
											"pm.test(\"Verify costCenterName max characters Message\", function(){",
											"    pm.expect(pm.globals.get(\"MsgCostCenterNamemaxCharacters\")).to.eql(JSON.parse(responseBody).error[0])",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": {
										"value": "{{Token}}",
										"key": "token",
										"in": "query"
									}
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"costCenterName\": \"{{LongFullName}}\",\n  \"boardId\": \"{{IdBoard}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/api/costCenter"
							},
							"response": []
						}
					]
				},
				{
					"name": "List Cost Center",
					"item": [
						{
							"name": "Invalid URL",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 404\", function(){",
											"    pm.response.to.have.status(404)",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": {
										"value": "{{Token}}",
										"key": "token",
										"in": "query"
									}
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}"
							},
							"response": []
						},
						{
							"name": "Unauthorized access",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 403\", function(){",
											"    pm.response.to.have.status(403)",
											"});",
											"",
											"pm.test(\"Verify unauthorized message\", function(){",
											"    pm.expect(pm.globals.get(\"MSGNoToken\")).to.eql(JSON.parse(responseBody).errors[0])",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/api/costCenter"
							},
							"response": []
						},
						{
							"name": "Malformed ID",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 500\", function(){",
											"    pm.response.to.have.status(500)",
											"});",
											"",
											"pm.test(\"Verify malformedID message\", function(){",
											"    pm.expect(pm.globals.get(\"MSGMalformedIDCostCenter\")).to.eql(JSON.parse(responseBody).error)",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": {
										"value": "{{Token}}",
										"key": "token",
										"in": "query"
									}
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/api/costCenter/9999999999999999999999"
							},
							"response": []
						}
					]
				},
				{
					"name": "Edit Cost Center",
					"item": [
						{
							"name": "Edit CostCenter whit no info",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"function costCenterName(){",
											"",
											"var costCenterName = [",
											"  \"Operações\", \"Financeira\", \"Tecnologia\", \"Recursos Humanos\", \"Marketing\",",
											"  \"Vendas\", \"Desenvolvimento\", \"Logística\", \"Jurídica\", \"Executiva\", \"Administrativa\",",
											"  \"Qualidade\", \"Sustentabilidade\", \"Comunicação\", \"Projetos\", \"Inovação\", \"Administração\",",
											"  \"Design\", \"Produção\", \"Educação\", \"Pesquisa e Desenvolvimento\", \"Suporte ao Cliente\",",
											"  \"Manufatura\", \"Engenharia\", \"Eventos\", \"Serviços ao Consumidor\", \"Mídias Sociais\",",
											"  \"Analytics\", \"Auditoria\", \"Compras\", \"Segurança da Informação\", \"Saúde e Bem-Estar\",",
											"  \"Arquitetura\", \"Transporte\", \"Consultoria\", \"Parcerias\", \"Governança\", \"Cultura Organizacional\",",
											"  \"Desempenho\", \"Internacional\", \"Diversidade e Inclusão\", \"Alianças Estratégicas\",",
											"  \"Planejamento\", \"Treinamento\", \"Responsabilidade Social\", \"Assuntos Regulatórios\",",
											"  \"Propriedade Intelectual\", \"Assuntos Públicos\", \"Pesquisa de Mercado\", \"Planejamento Financeiro\"",
											"];",
											"",
											"var randomItem = costCenterName[Math.floor(Math.random() * costCenterName.length)];",
											"",
											"return randomItem;",
											"}",
											"",
											"pm.environment.set(\"costCenterName\", costCenterName());"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function(){",
											"    pm.response.to.have.status(400)",
											"});",
											"",
											"pm.test(\"Verify costCenterName Message\", function(){",
											"    pm.expect(pm.globals.get(\"MSGCostCenterIsRequired\")).to.eql(JSON.parse(responseBody).error[0])",
											"});",
											"",
											"pm.test(\"Verify boardId Message\", function(){",
											"    pm.expect(pm.globals.get(\"MSGBoardIDIsRequired\")).to.eql(JSON.parse(responseBody).error[1])",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": {
										"value": "{{Token}}",
										"key": "token",
										"in": "query"
									}
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"costCenterName\": \"\",\n  \"boardId\": \"\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/api/costCenter/{{IdcostCenter}}"
							},
							"response": []
						},
						{
							"name": "Edit CostCenter permited characters",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"function costCenterName(){",
											"",
											"var costCenterName = [",
											"  \"Operações\", \"Financeira\", \"Tecnologia\", \"Recursos Humanos\", \"Marketing\",",
											"  \"Vendas\", \"Desenvolvimento\", \"Logística\", \"Jurídica\", \"Executiva\", \"Administrativa\",",
											"  \"Qualidade\", \"Sustentabilidade\", \"Comunicação\", \"Projetos\", \"Inovação\", \"Administração\",",
											"  \"Design\", \"Produção\", \"Educação\", \"Pesquisa e Desenvolvimento\", \"Suporte ao Cliente\",",
											"  \"Manufatura\", \"Engenharia\", \"Eventos\", \"Serviços ao Consumidor\", \"Mídias Sociais\",",
											"  \"Analytics\", \"Auditoria\", \"Compras\", \"Segurança da Informação\", \"Saúde e Bem-Estar\",",
											"  \"Arquitetura\", \"Transporte\", \"Consultoria\", \"Parcerias\", \"Governança\", \"Cultura Organizacional\",",
											"  \"Desempenho\", \"Internacional\", \"Diversidade e Inclusão\", \"Alianças Estratégicas\",",
											"  \"Planejamento\", \"Treinamento\", \"Responsabilidade Social\", \"Assuntos Regulatórios\",",
											"  \"Propriedade Intelectual\", \"Assuntos Públicos\", \"Pesquisa de Mercado\", \"Planejamento Financeiro\"",
											"];",
											"",
											"var randomItem = costCenterName[Math.floor(Math.random() * costCenterName.length)];",
											"",
											"return randomItem;",
											"}",
											"",
											"pm.environment.set(\"costCenterName\", costCenterName());"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function(){",
											"    pm.response.to.have.status(400)",
											"});",
											"",
											"pm.test(\"Verify costCenterName Message\", function(){",
											"    pm.expect(pm.globals.get(\"MsgCostCenterNamePermitedCharacters\")).to.eql(JSON.parse(responseBody).error[0])",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": {
										"value": "{{Token}}",
										"key": "token",
										"in": "query"
									}
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"costCenterName\": \"{{}}\",\n  \"boardId\": \"{{}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/api/costCenter/{{IdcostCenter}}"
							},
							"response": []
						},
						{
							"name": "Edit CostCenter max characters",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"function costCenterName(){",
											"",
											"var costCenterName = [",
											"  \"Operações\", \"Financeira\", \"Tecnologia\", \"Recursos Humanos\", \"Marketing\",",
											"  \"Vendas\", \"Desenvolvimento\", \"Logística\", \"Jurídica\", \"Executiva\", \"Administrativa\",",
											"  \"Qualidade\", \"Sustentabilidade\", \"Comunicação\", \"Projetos\", \"Inovação\", \"Administração\",",
											"  \"Design\", \"Produção\", \"Educação\", \"Pesquisa e Desenvolvimento\", \"Suporte ao Cliente\",",
											"  \"Manufatura\", \"Engenharia\", \"Eventos\", \"Serviços ao Consumidor\", \"Mídias Sociais\",",
											"  \"Analytics\", \"Auditoria\", \"Compras\", \"Segurança da Informação\", \"Saúde e Bem-Estar\",",
											"  \"Arquitetura\", \"Transporte\", \"Consultoria\", \"Parcerias\", \"Governança\", \"Cultura Organizacional\",",
											"  \"Desempenho\", \"Internacional\", \"Diversidade e Inclusão\", \"Alianças Estratégicas\",",
											"  \"Planejamento\", \"Treinamento\", \"Responsabilidade Social\", \"Assuntos Regulatórios\",",
											"  \"Propriedade Intelectual\", \"Assuntos Públicos\", \"Pesquisa de Mercado\", \"Planejamento Financeiro\"",
											"];",
											"",
											"var randomItem = costCenterName[Math.floor(Math.random() * costCenterName.length)];",
											"",
											"return randomItem;",
											"}",
											"",
											"pm.environment.set(\"costCenterName\", costCenterName());"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function(){",
											"    pm.response.to.have.status(400)",
											"});",
											"",
											"pm.test(\"Verify costCenterName max characters Message\", function(){",
											"    pm.expect(pm.globals.get(\"MsgCostCenterNamemaxCharacters\")).to.eql(JSON.parse(responseBody).error[0])",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": {
										"value": "{{Token}}",
										"key": "token",
										"in": "query"
									}
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"costCenterName\": \"{{LongFullName}}\",\n  \"boardId\": \"{{IdBoard}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/api/costCenter/{{IdcostCenter}}"
							},
							"response": []
						}
					]
				},
				{
					"name": "Edit Cost Center Status",
					"item": [
						{
							"name": "Edit CostCenter Status to false again",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status code is 208', function () {",
											"    pm.response.to.have.status(208);",
											"})",
											"",
											"pm.globals.set('MSGCostCenterStatusMainteinFalse', 'Esse centro de custo já se encontra inativado.');",
											"",
											"pm.test('Verify costCenter status', function () {",
											"    pm.expect(pm.globals.get('MSGCostCenterStatusMainteinFalse')).to.eql(JSON.parse(responseBody).msg);",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": {
										"value": "{{Token}}",
										"key": "token",
										"in": "query"
									}
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"status\": false\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/api/costCenter/status/{{IdcostCenter}}"
							},
							"response": []
						},
						{
							"name": "Edit CostCenter Status to true again Copy",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status code is 208', function () {",
											"    pm.response.to.have.status(208);",
											"})",
											"",
											"pm.globals.set('MSGCostCenterStatusMainteinTrue', 'Esse centro de custo já se encontra ativado.');",
											"",
											"pm.test('Verify costCenter status', function () {",
											"    pm.expect(pm.globals.get('MSGCostCenterStatusMainteinTrue')).to.eql(JSON.parse(responseBody).msg);",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": {
										"value": "{{Token}}",
										"key": "token",
										"in": "query"
									}
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"status\": true\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/api/costCenter/status/{{IdcostCenter}}"
							},
							"response": []
						}
					]
				}
			]
		}
	]
}